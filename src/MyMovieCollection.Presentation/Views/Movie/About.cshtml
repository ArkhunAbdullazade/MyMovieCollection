@model Movie

@{
    var allReviews = ViewData["Reviews"] as IEnumerable<UserMovie> ?? Enumerable.Empty<UserMovie>();
    var currUserReview = ViewData["currUserReview"] as UserMovie;
    float? movieScore = ViewData["MovieScore"] as float?;
    var isAuthenticated = base.User.Identity?.IsAuthenticated ?? false;
    bool isAdmin = base.User.IsInRole("Admin");

    int Id = Model.Id;
    string? Score = string.Empty;
    string? Review = string.Empty;
}

<style>
    h1 {
        text-align: center;
        font-size: 60px;
    }

    .img-div>img {
        border-radius: 10px;
        width: 318px;
        height: 467px;
    }

    .backdrop-div {
        width: 1200px;
        height: 600px;
        background-position: right bottom;
        background-size: cover;
        background-image: url(@Model.BackdropPath);
        box-shadow: 0 0 10px 10px #2d3238 inset,
            0 0 0 2000px rgba(0, 0, 0, 0.2) inset;
        ;
        position: sticky;
        margin: auto;
    }

    span,
    h1 {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    }

    .title {
        font-size: 40px;
    }

    .original-title {
        font-style: italic;
        font-size: 20px;
    }

    .release-date {
        font-size: 20px;
    }

    .description {
        font-size: 18px;
    }

    .cont {
        display: inline;
        align-items: center;
        margin: auto;
    }

    .info-div {
        padding-left: 10px;
        transform: translateY(-1.8%);
    }

    .info {
        margin: auto;
        display: flex;
        width: 1000px;
        transform: translateY(-8%);
    }

    .score {
        display: inline-block;
        line-height: 0px;
        border-radius: 50%;
        border: 2px solid;
        font-size: 1.8em;
        text-align: center;
        border-color: white;
        width: 80px;
    }

    .score span {
        display: inline-block;
        padding-top: 50%;
        padding-bottom: 50%;
        margin-left: 8px;
        margin-right: 8px;
    }

    .small-score {
        display: inline-block;
        line-height: 0px;
        border-radius: 50%;
        border: 2px solid;
        font-size: 0.74em;
        text-align: center;
        border-color: white;
        width: 40px;
    }

    .small-score span {
        display: inline-block;
        padding-top: 50%;
        padding-bottom: 50%;
        margin-left: 8px;
        margin-right: 8px;
    }

    .modal-header,
    .modal-footer {
        background-color: #2d3238;
    }

    .modal-body {
        background-color: #2d3238;
    }

    .reviews {
        margin-top: 15px;
    }

    .reviews>div {
        align-items: center;
    }

    .card-body {
        align-items: center;
        margin: auto;
    }
</style>

<div class="cont">
    <div class="backdrop">
        <div class="backdrop-div"></div>
    </div>
    <div class="info">
        <div class="img-div">
            <img src="@(Model.PosterPath ?? "https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Black.png/220px-Black.png")"
                alt="movie poster" />
        </div>
        <div class="info-div">
            <span class="title"><b>@Model.Title</b></span>
            <span class="original-title">@Model.OriginalTitle</span>
            <span class="release-date">@Model.ReleaseDate</span>
            <br>
            <div style="display: flex; flex-direction: row; text-align: center; gap: 10px;">
                <div>
                    <h4>Critics</h4>
                    @if (@Model.Score is null)
                    {
                        <span class="score"><span>N/R</span></span>
                    }
                    else
                    {
                        <span class="score"><span>@(MathF.Round((float)Model.Score, 1))</span></span>
                    }
                </div>
                <div>
                    <h4>Users</h4>
                    @if (@movieScore is null)
                    {
                        <span class="score"><span>N/R</span></span>
                    }
                    else
                    {
                        <span class="score"><span>@(MathF.Round((float)movieScore, 1))</span></span>
                    }
                </div>
            </div>
            <br>
            <p class="description">@Model.Overview</p>
            @if (Model.Trailer is not null)
            {
                <div class="embed-responsive embed-responsive-16by9">
                    <embed width="700" height="400" src="https://www.youtube.com/embed/@Model.Trailer" type="video/webm"
                        allowfullscreen></embed>
                </div>
            }
            @if (isAuthenticated)
            {
                @if (currUserReview is null)
                {
                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#addReviewModal">Add to Watched</button>
                }
                <div class="row">
                    <div class="col">
                        @foreach (var review in allReviews)
                        {
                            <div class="d-flex flex-start mt-3">
                                @if (string.IsNullOrWhiteSpace(@review.User?.ProfilePicture))
                                {
                                    <img class="rounded-circle shadow-1-strong me-3"
                                        src="~/ProfilePictures/DefaultProfilePicture.png" alt="avatar" width="65" height="65">
                                }
                                else
                                {
                                    <img class="rounded-circle shadow-1-strong me-3 mt-2" src="@review.User?.ProfilePicture"
                                        alt="avatar" width="65" height="65">
                                }
                                <div class="flex-grow-1 flex-shrink-1">
                                    <div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <p class="mb-1">
                                                <a class="link-warning" asp-area="" asp-controller="User" asp-action="Profile"
                                                    asp-route-id="@review.UserId">@review.User?.UserName</a>
                                                @if (@review.Rating is null)
                                                {
                                                    <span>N/R</span>
                                                }
                                                else
                                                {
                                                    <span>@(MathF.Round((float)review.Rating!, 1))/10</span>
                                                }
                                            </p>
                                        </div>
                                        <p class="small mb-0"> @review.Review </p>
                                    </div>
                                </div>
                                @if (isAdmin || currUserReview?.UserId == review.UserId)
                                {
                                    <form method="post" asp-action="Delete" asp-controller="Movie" asp-route-id="@review.Id">
                                        <button class="btn btn-danger mt-2" type="submit"
                                            onclick="deleteUser('@review.Id')">DELETE</button>
                                    </form>
                                }

                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

</div>

<!-- Create Review Modal -->
<div class="modal fade" id="addReviewModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Review this Movie</h4>
            </div>
            <form method="post" asp-action="Add" asp-controller="Movie">
                <div class="modal-body">
                    <input type="hidden" asp-for="@Id">
                    <div class="form-group">
                        <label for="review-text" class="col-form-label">Review:</label>
                        <textarea asp-for="@Review" class="form-control" id="review-text"></textarea>
                    </div>
                    <br>
                    <div class="form-group">
                        <select asp-for="@Score" class="form-control" id="rating" name="score">
                            <option value="">no rating</option>
                            <option value="1">✪ 1 stars</option>
                            <option value="2">✪ 2 stars</option>
                            <option value="3">✪ 3 stars</option>
                            <option value="4">✪ 4 stars</option>
                            <option value="5">✪ 5 stars</option>
                            <option value="6">✪ 6 stars</option>
                            <option value="7">✪ 7 stars</option>
                            <option value="8">✪ 8 stars</option>
                            <option value="9">✪ 9 stars</option>
                            <option value="10">✪ 10 stars</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-warning">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>